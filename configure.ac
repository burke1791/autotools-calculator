# This file is read by both autoconf (to create configure) and automake (to create Makefile.in's).
#
# AC_ = autoconf macro
# AM_ = automake macro

# Initializes autoconf with three parameters:
# - name of the package
# - version number
# - email address for bug reports
AC_INIT([autocalc], [1.0], [calc@example.com])

# Initializes automake with a list of options
# Note: these options DO NOT affect the compiler's behavior, they only
# impact how automake behaves
AM_INIT_AUTOMAKE([-Wall -Werror foreign])

AC_CONFIG_MACRO_DIR([m4])

# This tells autoconf to find a compiler and define the CC global variable
# The Makefile.in's generated by automake will then use the CC variable,
# which is set to whatever autoconf found.
#
# We don't have to tell it to use a specific compiler - we can call it like this:
# AC_PROG_CC
# However, I want to use gcc in the project so I tell autoconf to set CC = gcc
AC_PROG_CC([gcc])

AM_PROG_AR

# Ensures we can build and link shared libraries
LT_INIT

# This macro declares a list of files that configure should create from the '.in'
# templates. Generally speaking, if a directory has a Makefile.am, you will add it
# to this list (without the .am)
AC_CONFIG_FILES([
  Makefile
  src/calc/Makefile
  src/reader/Makefile
])

# This is a closing command that produces the part of the script that creates
# the files registered in AC_CONFIG_FILES
AC_OUTPUT